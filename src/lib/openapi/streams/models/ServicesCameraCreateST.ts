/* tslint:disable */
/* eslint-disable */
/**
 * Streams
 * Streams API
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: nathanfaucett@email.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ServicesCameraCreateST
 */
export interface ServicesCameraCreateST {
    /**
     * 
     * @type {boolean}
     * @memberof ServicesCameraCreateST
     */
    disabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ServicesCameraCreateST
     */
    name?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ServicesCameraCreateST
     */
    recording?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ServicesCameraCreateST
     */
    rtsp_url?: string;
    /**
     * 
     * @type {string}
     * @memberof ServicesCameraCreateST
     */
    url?: string;
}

/**
 * Check if a given object implements the ServicesCameraCreateST interface.
 */
export function instanceOfServicesCameraCreateST(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ServicesCameraCreateSTFromJSON(json: any): ServicesCameraCreateST {
    return ServicesCameraCreateSTFromJSONTyped(json, false);
}

export function ServicesCameraCreateSTFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServicesCameraCreateST {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'disabled': !exists(json, 'disabled') ? undefined : json['disabled'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'recording': !exists(json, 'recording') ? undefined : json['recording'],
        'rtsp_url': !exists(json, 'rtsp_url') ? undefined : json['rtsp_url'],
        'url': !exists(json, 'url') ? undefined : json['url'],
    };
}

export function ServicesCameraCreateSTToJSON(value?: ServicesCameraCreateST | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'disabled': value.disabled,
        'name': value.name,
        'recording': value.recording,
        'rtsp_url': value.rtsp_url,
        'url': value.url,
    };
}

